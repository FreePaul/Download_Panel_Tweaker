<?xml version="1.0"?>
<!DOCTYPE vbox SYSTEM "chrome://downloadpaneltweaker/locale/dpt.dtd">
<vbox xmlns="http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul">
	<setting pref="browser.download.useToolkitUI" type="bool" title="&dpt.useOldUI;"
		onpreferencechanged='
		setTimeout(function(_this) {
			var {Services} = Components.utils.import("resource://gre/modules/Services.jsm", {});
			if(parseFloat(Services.appinfo.version) >= 26) {
				_this.removeAttribute("onpreferencechanged");
				return;
			}
			var setup = _this.value
				? function(node) {
					node.setAttribute("disabled", "true");
					if(arguments.length == 1)
						node.style.opacity = "0.55";
				}
				: function(node) {
					node.removeAttribute("disabled");
					if(arguments.length == 1)
						node.style.opacity = "";
				};
			for(var setting = _this.nextSibling; setting; setting = setting.nextSibling) {
				if(setting.localName != "setting")
					continue;
				var pref = setting.getAttribute("pref") || "";
				if(
					pref.endsWith(".itemCountLimit")
					|| pref.endsWith(".panelWidth")
					|| pref.endsWith(".panelMaxHeight")
					|| pref.endsWith(".dontRemoveFinishedDownloads")
				) {
					setup(setting);
					Array.forEach(setting.getElementsByTagName("*"), setup);
				}
			}
		}, 0, this);
	' />
	<setting pref="extensions.downloadPanelTweaker.itemCountLimit" type="integer" title="&dpt.itemCountLimit;" />
	<setting pref="extensions.downloadPanelTweaker.panelWidth" type="integer" title="&dpt.panelWidth;" />
	<setting pref="extensions.downloadPanelTweaker.panelMaxHeight" type="integer" title="&dpt.panelMaxHeight;" />
	<setting pref="extensions.downloadPanelTweaker.progressBarHeight" type="integer" title="&dpt.progressBarHeight;" />
	<setting pref="extensions.downloadPanelTweaker.compactDownloads" type="radio" title="&dpt.compactDownloads;">
		<radiogroup>
			<radio label="&dpt.compactDownloads.default;" value="0" />
			<radio label="&dpt.compactDownloads.compact;" value="1" />
			<radio label="&dpt.compactDownloads.veryCompact;" value="2" />
		</radiogroup>
	</setting>
	<setting pref="extensions.downloadPanelTweaker.showDownloadRate" type="bool" title="&dpt.showDownloadRate;" />
	<setting pref="extensions.downloadPanelTweaker.decolorizePausedProgress" type="bool" title="&dpt.decolorizePausedProgress;" />
	<setting pref="extensions.downloadPanelTweaker.dontRemoveFinishedDownloads" type="bool" title="&dpt.dontRemoveFinishedDownloads;" />

	<setting pref="extensions.downloadPanelTweaker.overrideDownloadsCommand" type="menulist" title="&dpt.override.downloadsCommand;"
		onpreferencechanged='
			this.removeAttribute("onpreferencechanged");
			var {Services} = Components.utils.import("resource://gre/modules/Services.jsm", {});
			if(parseFloat(Services.appinfo.version) >= 26) {
				var oldUI = this.ownerDocument.getElementsByAttribute("pref", "browser.download.useToolkitUI")[0];
				if(oldUI)
					oldUI.style.display = "none";
			}
			setTimeout(function(_this) {
				var hasPrivateWindows = parseFloat(Services.appinfo.version) >= 20;
				var mp = _this.getElementsByTagName("menupopup")[0];
				for(var setting = _this.nextSibling; setting; setting = setting.nextSibling) {
					if(setting.localName != "setting" || setting.getAttribute("type") != "menulist")
						continue;
					var pref = setting.getAttribute("pref") || "";
					if(!pref.startsWith("extensions.downloadPanelTweaker.override"))
						continue;
					if(pref == "extensions.downloadPanelTweaker.overrideDownloadsHotkey") try {
						var keyText = "$1";
						var win = Services.wm.getMostRecentWindow("navigator:browser");
						if(win) {
							var doc = win.document;
							var mi = doc.getElementById("menu_openDownloads");
							var menu = mi.parentNode.parentNode;
							menu.open = true;
							menu.open = false;
							var key = mi.getAttribute("acceltext");
							if(key)
								keyText = key;
						}
					}
					catch(e) {
						Components.utils.reportError(e);
					}
					finally {
						setting.setAttribute("title", setting.getAttribute("title").replace(/\{(.+?)\}/, keyText));
					}
					var ml = setting.getElementsByTagName("menulist")[0];
					ml.appendChild(mp.cloneNode(true));
					setting.valueFromPreference();
					if(pref.endsWith(".private")) {
						var label = setting.ownerDocument.getAnonymousElementByAttribute(setting, "class", "preferences-title");
						if(label)
							label.style.marginStart = label.style.MozMarginStart = "4ch";
						if(hasPrivateWindows) {
							var openWnd = ml.getElementsByAttribute("value", "2")[0];
							openWnd.tooltipText += "\n&dpt.override.openOldWindowNotePrivate;";
							var tooggleSb = ml.getElementsByAttribute("value", "5")[0];
							tooggleSb.tooltipText = "&dpt.override.toggleSidebarNotePrivate;";
							tooggleSb.className = "downloadPanelTweaker-item";
						}
						else {
							setting.setAttribute("disabled", "true");
							Array.forEach(setting.getElementsByTagName("*"), function(node) {
								node.setAttribute("disabled", "true");
							});
							setting.style.opacity = "0.55";
						}
					}
				}
			}, 0, this);
		'>
		<menulist>
			<menupopup>
				<menuitem label="&dpt.override.default;" value="0" />
				<menuitem label="&dpt.override.togglePanel;" value="1" />
				<menuitem label="&dpt.override.openOldWindow;" value="2"
					tooltiptext="&dpt.override.openOldWindowNote;"
					class="downloadPanelTweaker-item" />
				<menuitem label="&dpt.override.openInTab;" value="3" />
				<menuitem label="&dpt.override.openLibraryWindow;" value="4" />
				<menuitem label="&dpt.override.toggleSidebar;" value="5" />
			</menupopup>
		</menulist>
	</setting>
	<setting pref="extensions.downloadPanelTweaker.overrideDownloadsCommand.private" type="menulist" title="&dpt.override.inPrivateWindow;">
		<menulist />
	</setting>
	<setting pref="extensions.downloadPanelTweaker.overrideDownloadsHotkey" type="menulist" title="&dpt.override.downloadsHotkey;">
		<menulist />
	</setting>
	<setting pref="extensions.downloadPanelTweaker.overrideDownloadsHotkey.private" type="menulist" title="&dpt.override.inPrivateWindow;">
		<menulist />
	</setting>
	<setting pref="extensions.downloadPanelTweaker.overrideShowAllDownloads" type="menulist" title="&dpt.override.showAllDownloads;">
		<menulist />
	</setting>
	<setting pref="extensions.downloadPanelTweaker.overrideShowAllDownloads.private" type="menulist" title="&dpt.override.inPrivateWindow;">
		<menulist />
	</setting>
</vbox>